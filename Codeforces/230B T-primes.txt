- 230B T-primes | 01/01/2025

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define FAST_IO ios::sync_with_stdio(false); cin.tie(0);
#define LLMAXSQRT sqrt(LLONG_MAX);
 
int square_root(int n) {
    int L = 0, R = LLMAXSQRT;
    while (L <= R) {
        int mid = L + (R-L)/2;
        if (mid*mid == n) return mid;
        if (mid*mid < n) L = mid + 1;
        else R = mid - 1;
    }
    return -1;
}
 
bool is_prime(int n) {
    if (n <= 1) return 0;
    if (n == 2 || n == 3) return 1;
    if (n % 2 == 0 || n % 3 == 0) return 0;
    for (int i = 5; i*i <= n; i += 6) {
        if (n % i == 0 || n % (i+2) == 0) return 0;
    }
    return 1;
}
 
int32_t main() {
    FAST_IO;
    int n; cin >> n;
    for (int i = 0; i < n; i++) {
        int xi; cin >> xi;
        if (square_root(xi) != -1 && is_prime(square_root(xi)) && xi > 1) cout << "YES";
        else cout << "NO";
        cout << "\n";
    }
}